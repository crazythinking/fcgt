#针对管理API的安全控制
security:
  basic:
    enabled: true
    #针对/admin路径进行认证
    path: 
    - /admin
  #认证使用的用户名
  user:
    name: scccAdmin
    password: scccP@55w0rd
    role:
    - ACTUATOR_MONITOR

#管理API相关配置
management:
  #actuator暴露接口的前缀
  context-path: /admin
  #actuator是否需要安全保证
  security:
    enabled: true
    roles:
    - ACTUATOR_MONITOR

endpoints:
  shutdown:
    enabled: true
    sensitive: false
  metrics:
    #actuator的metrics接口是否需要安全保证
    sensitive: false
    enabled: true
  health:
    #actuator的health接口是否需要安全保证
    sensitive: false
    enabled: true

spring:
  application:
    name: fc-gateway-sv
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  jpa:
    hibernate:
      naming:
#       配置SQL生成命名策略，spring默认的策略会转为小写；配置为保持原命名方式
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    database: mysql
    properties:
      hibernate.format_sql: true
      pg.snowflake.workerId: 1
      pg.snowflake.dataCenterId: 1
  rabbitmq:
    host: 192.168.10.131 #10.156.44.41
    port: 5672
    username: loan
    password: loan123
    virtual-host: sccc
    publisher-confirms: true
    dynamic: true
    listener:
      auto-startup: true
      prefetch: 1
      concurrency: 5
      acknowledge-mode: auto
    cache:
      channel:
        size: 100
        checkout-timeout: 1000
      connection:
        mode: channel
    #RabbitTemplate sendAndReceive() 超时毫秒数
    template:
      reply-timeout: 30000

# 打开Feign Client的Hystrix功能；IDEA虽然找不到对应的类，但是基于Feign的Client必须加上;
feign:
  hystrix:
    enabled: true

# 以下配置Ribbon的相关参数，详见com.netflix.client.config.DefaultClientConfigImpl, com.netflix.client.config.CommonClientConfigKey
# 全局的Ribbon参数
#ribbon:
#  MaxConnectionsPerHost: 50 #最大连接数默认50
#  ListOfServers: localhost:8080, localhost:8081 #在没有服务注册中心时，可以直接指定服务列表
# 为sccc-accounting-sv指定负载均衡器
#sccc-accounting-sv:
#  ribbon:
#    MaxConnectionsPerHost: 50 #最大连接数默认50

# 以下配置Hystrix的相关参数


# Eureka服务注册中心的相关参数
eureka:
  instance:
    metadata-map: #向Eureka服务提交元数据，这里是为了监控服务可以获取访问权限
      user.name: ${security.user.name}
      user.password: ${security.user.password}
      management.port:  ${management.port}
      management.context-path: ${management.context-path}
  client: #当eureka为高可用服务之后，服务提供者、服务消费者的注册也不能再是一个节点上，要同时注册到所有的注册中心之上
    service-url:
      defaultZone: http://eureka1:7070/eureka/
      #,http://eureka2:7071/eureka/,http://eureka3:7072/eureka/
      